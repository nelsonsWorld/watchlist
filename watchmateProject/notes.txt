1. What does "iterable" mean?
2. DRF video "Creating JSON Response- All Elements"- Complex Query Result > Python Dictionary > JSON Response
3. Serialization and Deserialization. two types serializers.serializers, serializers.ModelSerializer
4. Function based views/Class based views (import APIView class).
5. Working with API > DRF Browsable API, Postman, HTTPie.
6. When you want multiple objects, "many = True" in the MovieSerializer attribute.
7. Explain function " return Movie.objects.create(**validated_data)" and why needs "**".
## WHEN DOING TOKEN AUTHENTICATION, THE CONSTANT DB CHECK FOR TOKEN CAN BE AN ISSUE ONCE YOU HAVE MILLIONS OF USERS ACCESSING YOUR SERVER##

1. functions based views, Class based views, generic views with mixins, generics views, concrete views, viewsets w/routers and path include router.urls
2. For blanket, global restriction, In settings.py, at the bottom below STATIC and Bigfield DB entry:
# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated'
#     ]
# }

3. When do you nest a response/return and when do you go to the previous indent?

          ex. if X = True :
                    if x = True:

                    return ?
                     or
             return?

MAJOR ISSUES:

stream/ doesn't show reviews in JSON, fixed: The StreamPlatform serializer was missing:

class StreamPlatformSerializer(serializers.ModelSerializer):
    watchlist = WatchListSerializer(many=True, read_only=True) <----THIS


Version 23 learned about Global and class(possibly function?) based permissions. 


3 purposes for filter:

1. Filter conent
2. Search content
3. Order content


.gbenv/bin/python -m pip install django-filter

Remember filter is good when working specific values
search works with taking any input user

watch Project Update video and video before thta and play around with
with Search and Filter


Don't forget you never EVER name a view class or function the same name as a model. 


```````````MASTER BASE WEBSITE DESIGN~~~~~~~~~~~~~~~

1. ORM/DB DESIGN
2. URIs
3. functions
4. AUTHENTICATION
5. Security
6. Throttling (if this is public API, pay per call to monthly subscription, etc)
7. Search/Filter/Ordering
8. Pagination (how many results per page all depends on client and cost)
9. JSON or XML?




!!!!!!!!!!!!!Pagination

1. There are many types of pagination